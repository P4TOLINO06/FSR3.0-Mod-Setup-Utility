[Upscalers]
; Select upscaler for Dx11 games
; xess, fsr22 (native dx11), fsr21_12 (dx11 with dx12) or fsr22_12 (dx11 with dx12) - Default (auto) is fsr
Dx11Upscaler=fsr21_12

; Select upscaler for Dx12 games
; xess, fsr21 or fsr22 - Default (auto) is xess
Dx12Upscaler=fsr21

; Select upscaler for Vulkan games
; fsr21 or fsr22 - Default (auto) is fsr22
VulkanUpscaler=fsr21

[Dx11withDx12]
; Safe syncing measures for Dx11 with Dx12
; Might be needed for Intel Arc cards or different Dx11 drivers
;
; Valid values are;
;	0 - Safe syncing is off                         (fastest, most prone to errors)
;	1 - Only Fences
;	2 - Fences + Flush after Dx11 texture copies
;	3 - Sync after output copy				
;	4 - No fences, all sync done with queries       (slowest)
;
; 0 is fastest, 4 is slowest
;
; 0 - 4 - Default (auto) is 1
UseSafeSyncQueries=auto

[XeSS]
; Building pipeline for XeSS before init
; true or false - Default (auto) is true
BuildPipelines=auto 

; Override XeSS quality mode 
; (will not change scale ratio, experimental probably does not make any difference)
; XESS_QUALITY_SETTING_PERFORMANCE = 101,
; XESS_QUALITY_SETTING_BALANCED = 102,
; XESS_QUALITY_SETTING_QUALITY = 103,
; XESS_QUALITY_SETTING_ULTRA_QUALITY = 104,
; Default (auto) is XeSS quality matching DLSS value
OverrideQuality=auto

; Enable colorspace fix for AW2 & FFO - Stranger of Paradise
; true or false - Default (auto) is false
ColorSpaceFix=auto 


[FSR]
; 0.0 to 180.0 - Default (auto) is 60.0
VerticalFov=auto

; If vertical fov is not defined
; will be used to calculate vertical fov
; 0.0 to 180.0 - Default (auto) is 0.0
HorizontalFov=auto

[Sharpness]
; Override DLSS sharpness paramater with fixed shapness value
; true or false - Default (auto) is false
OverrideSharpness=auto

; Strength of sharpening, 
; value range between 0.0 and 1.0 - Default (auto) is 0.3
Sharpness=auto

[CAS]
; Enables CAS shapening for XeSS
; true or false - Default (auto) is true
Enabled=auto

; Color space conversion for input and output
; Looks like some games might need it
;
; Valid values are;
; 0 = FFX_CAS_COLOR_SPACE_LINEAR            -> Linear color space, will do nothing.
; 1 = FFX_CAS_COLOR_SPACE_GAMMA20           -> Convert gamma 2.0 to linear for input and linear to gamma 2.0 for output.
; 2 = FFX_CAS_COLOR_SPACE_GAMMA22           -> Convert gamma 2.2 to linear for input and linear to gamma 2.2 for output.
; 3 = FFX_CAS_COLOR_SPACE_SRGB_OUTPUT       -> Only do sRGB conversion for output (input conversion will be done automatically).
; 4 = FFX_CAS_COLOR_SPACE_SRGB_INPUT_OUTPUT -> Convert sRGB to linear for input and linear to sRGB for output.
;
; Default (auto) is 0 = FFX_CAS_COLOR_SPACE_LINEAR 
ColorSpaceConversion=auto

[Log]
; Logging
; true or false- Default (auto) is true
LoggingEnabled=auto

; Log file, if undefined log_xess_xxxx.log file in current folder
;LogFile=./CyberXess.log

; Verbosity level of file logs
; 0 = Trace
; 1 = Debug
; 2 = Info
; 3 = Warning
; 4 = Error
;
; Default (auto) is 2 = Info
LogLevel=auto

; Log to console (Log level is always 2 (Info) for performance reasons) 
; true or false - Default (auto) is false
LogToConsole=auto

; Log to file 
; true or false - Default (auto) is false
LogToFile=auto

; Log to NVSDK api
; true or false - Default (auto) is false
LogToNVSDK=auto

; Open console window for logs
; true or false - Default (auto) is false
OpenConsole=auto

[Depth]
; Force add INVERTED_DEPTH to init flags
; true or false - Default (auto) is DLSS value
DepthInverted=auto

[Color]
; Force add ENABLE_AUTOEXPOSURE to init flags
; Some Unreal Engine games needs this, fixes colors specially in dark areas
; true or false - Default (auto) is  DLSS value
AutoExposure=auto

; Force add HDR_INPUT_COLOR to init flags
; true or false - Default (auto) is  DLSS value
HDR=auto

[MotionVectors]
; Force add JITTERED_MV flag to init flags
; true or false - Default (auto) is  DLSS value
JitterCancellation=auto

; Force add HIGH_RES_MV flag to init flags
; true or false - Default (auto) is  DLSS value
DisplayResolution=auto

[UpscaleRatio]
; Set this to true to enable the internal resolution override 
; true or false - Default (auto) is false
UpscaleRatioOverrideEnabled=auto

; Set the forced upscale ratio value
;
; resolution values are calculated in this way:
; OutHeight = Height / ratio;
; OutWidth = Width / ratio;
; example ratios: Quality preset = 1.5; Ultra performance preset = 2.5
;
; Default (auto) is 1.3
UpscaleRatioOverrideValue=auto

[QualityOverrides]
; Set this to true to enable custom quality mode overrides
; true or false - Default (auto) is false
QualityRatioOverrideEnabled=auto

; Set custom upscaling ratio for each quality mode
;
; Default (auto) values:
; Ultra Quality         : 1.3
; Quality               : 1.5
; Balanced              : 1.7
; Performance           : 2.0
; Ultra Performance     : 2.5
;
QualityRatioUltraQuality=auto
QualityRatioQuality=auto
QualityRatioBalanced=auto
QualityRatioPerformance=auto
QualityRatioUltraPerformance=auto

; If you have flickering problem in an Unreal Engine game
; you may try these values instead of default ones!
;
;QualityRatioOverrideEnabled=true
;
;QualityRatioUltraQuality=1.25
;QualityRatioQuality=1.4285714286
;QualityRatioBalanced=1.6666666667
;QualityRatioPerformance=2.0
;QualityRatioUltraPerformance=2.5

[Hotfix]
; Force remove RESPONSIVE_PIXEL_MASK from init flags
; true or false - Default (auto) is true
DisableReactiveMask=auto

;--------------------------------------------------------------------
; Check list at the bottow for other D3D12_RESOURCE_STATE values!!
;--------------------------------------------------------------------

; Color texture resource state to fix for rainbow colors on AMD cards (for mostly UE games) - Default (auto) is false
; For UE engine games on AMD, set it to D3D12_RESOURCE_STATE_RENDER_TARGET (4)
; Default (auto) is state correction disabled
ColorResourceBarrier=auto

; MotionVector texture resource state, from this to D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE (for mostly debugging) 
; Default (auto) is state correction disabled
MotionVectorResourceBarrier=auto 

; Depth texture resource state, from this D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE (for mostly debugging) 
; Default (auto) is state correction disabled
DepthResourceBarrier=auto

; Color mask texture resource state, from this D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE (for mostly debugging) 
; Default (auto) is state correction disabled
ColorMaskResourceBarrier=auto

; Exposure texture resource state, from this D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE (for mostly debugging) 
; Default (auto) is state correction disabled
ExposureResourceBarrier=auto

; Output texture resource state, from this D3D12_RESOURCE_STATE_UNORDERED_ACCESS (for mostly debugging) 
; Default (auto) is state correction disabled
OutputResourceBarrier=auto

; These settings defines each resources initial resource 
; state and add resource barrier for correct state
;
; Resource barrier states
; ----------------------------------------------------
; D3D12_RESOURCE_STATE_COMMON = 0,
; D3D12_RESOURCE_STATE_VERTEX_AND_CONSTANT_BUFFER = 1,
; D3D12_RESOURCE_STATE_INDEX_BUFFER	= 2,
; D3D12_RESOURCE_STATE_RENDER_TARGET = 4,
; D3D12_RESOURCE_STATE_UNORDERED_ACCESS	= 8,
; D3D12_RESOURCE_STATE_DEPTH_WRITE = 16,
; D3D12_RESOURCE_STATE_DEPTH_READ = 32,
; D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE = 64,
; D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE = 128,
; D3D12_RESOURCE_STATE_STREAM_OUT = 256,
; D3D12_RESOURCE_STATE_INDIRECT_ARGUMENT = 512,
; D3D12_RESOURCE_STATE_COPY_DEST = 1024,
; D3D12_RESOURCE_STATE_COPY_SOURCE = 2048,
; D3D12_RESOURCE_STATE_RESOLVE_DEST = 4096,
; D3D12_RESOURCE_STATE_RESOLVE_SOURCE = 8192,
; D3D12_RESOURCE_STATE_RAYTRACING_ACCELERATION_STRUCTURE = 4194304,
; D3D12_RESOURCE_STATE_SHADING_RATE_SOURCE = 16777216,
; D3D12_RESOURCE_STATE_GENERIC_READ	= 2755,
; D3D12_RESOURCE_STATE_ALL_SHADER_RESOURCE = 192,
; D3D12_RESOURCE_STATE_PRESENT = 0,
; D3D12_RESOURCE_STATE_PREDICATION = 310,
; D3D12_RESOURCE_STATE_VIDEO_DECODE_READ = 65536,
; D3D12_RESOURCE_STATE_VIDEO_DECODE_WRITE = 131072,
; D3D12_RESOURCE_STATE_VIDEO_PROCESS_READ = 262144,
; D3D12_RESOURCE_STATE_VIDEO_PROCESS_WRITE = 524288,
; D3D12_RESOURCE_STATE_VIDEO_ENCODE_READ = 2097152,
; D3D12_RESOURCE_STATE_VIDEO_ENCODE_WRITE = 8388608
;------------------------------------------------------

